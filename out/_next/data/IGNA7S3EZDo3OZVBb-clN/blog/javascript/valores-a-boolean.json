{"pageProps":{"post":{"title":"Cómo convertir un valor a un valor booleano en JavaScript","date":"2022-06-22T00:00:00.000Z","tags":["javascript","boolean"],"lastmod":"2022-06-22T00:00:00.000Z","draft":false,"summary":"Veamos cómo JavaScript utiliza la conversión de tipos para convertir valores en booleanos true/false.","images":["/static/images/blog/valores-a-boolean.jpg"],"authors":["fabiankaraben"],"body":{"raw":"\n![tailwind-nextjs-banner](/../static/images/blog/valores-a-boolean.jpg)\n\nUn booleano es un valor primitivo que representa verdadero o falso (true/false).\n\nEn contextos booleanos, JavaScript utiliza la conversión de tipos para convertir valores en true/false.\n\nExisten métodos implícitos y explícitos para convertir valores en sus equivalentes booleanos. Este artículo proporciona una descripción general de los valores verdaderos y falsos y cómo convertir valores en valores booleanos en JavaScript.\n\n## Hoja de trucos de valores true y false de JavaScript\n\n```\nBoolean(false);         // false\nBoolean(undefined);     // false\nBoolean(null);          // false\nBoolean('');            // false\nBoolean(NaN);           // false\nBoolean(0);             // false\nBoolean(-0);            // false\nBoolean(0n);            // false\n\nBoolean(true);          // true\nBoolean('hi');          // true\nBoolean(1);             // true\nBoolean([]);            // true\nBoolean([0]);           // true\nBoolean([1]);           // true\nBoolean({});            // true\nBoolean({ a: 1 });      // true\n```\n\nLo mejor es comenzar por comprender primero qué valores se interpretan como verdaderos o falsos por JavaScript. \n\nTambién es importante entender la coerción implícita en comparación con la coerción explícita. \n\nLa coerción implícita es iniciada por el motor de JavaScript y ocurre automáticamente. \n\nLa coerción explícita se realiza mediante la conversión manual de valores, y JavaScript proporciona métodos integrados para manejar esto.\n\n## El operador !!\n\n```javascript\n!!value\n```\n\n¡Es posible que ya estés familiarizado con `!` como el operador lógico NOT. Cuando se usan dos en sucesión (`!!`), \nel primero `!` fuerza el valor a un valor booleano y lo invierte. Por ejemplo, `!true` daría como resultado `false`. \nEl segundo `!` invierte el valor invertido anterior, dando como resultado el valor booleano `true`. \n\nEste es generalmente un método preferido, ya que tiene un mejor rendimiento. \nUna desventaja potencial de este método es la pérdida de legibilidad, principalmente si otros desarrolladores \nno están familiarizados con el funcionamiento de este operador.\n\n```javascript\nconst value = \"truthy string\"\n!!value // true\n```\n\nAquí hay un ejemplo desglosando esto en pasos:\n\n```javascript\nconst value = \"truthy string\";\n\n!value; // false\n!!value; // true\n```\n\nA continuación se muestra una lista de salida de ejemplo con el `!!` operador.\n\n```javascript\n// Falsy Values\n\n!!'' // false\n!!false // false\n!!null // false\n!!undefined // false\n!!0 // false\n!!NaN // false\n\n\n// Truthy Values\n\n!![] // true\n!!\"false\" // true\n!!true // true\n!!1 // true\n!!{} // true\n```\n\n## La función Boolean()\n\n```javascript\nBoolean(value)\n```\n\n`Boolean()` es una función global que convierte el valor que se pasa en un valor booleano. \n\nNo debes usar esto con la palabra clave `new` (`new Booleano`) ya que esto crea una instancia de un booleano \nque tiene un tipo de objeto. A continuación se muestra un ejemplo del uso correcto de esta función.\n\n```javascript\nconst value = \"truthy string\"\nBoolean(value) // true\n```\n\n## En resumen\n\nHay dos métodos para convertir un valor a un booleano en JavaScript.\n\n### 1. `!!`\n\n```javascript\n!!value\n```\n\n### 2. `Boolean()`\n\n```javascript\nBoolean(value)\n```\n\n```javascript\nconst finalThoughts = \"I really enjoyed writing this article. Thanks for reading!\"\n\n!!finalThoughts // true\nBoolean(finalThoughts) // true\n```","code":"var Component=(()=>{var d=Object.create;var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var N=(n,s)=>()=>(s||n((s={exports:{}}).exports,s),s.exports),k=(n,s)=>{for(var l in s)o(n,l,{get:s[l],enumerable:!0})},r=(n,s,l,a)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let c of m(s))!u.call(n,c)&&c!==l&&o(n,c,{get:()=>s[c],enumerable:!(a=p(s,c))||a.enumerable});return n};var g=(n,s,l)=>(l=n!=null?d(h(n)):{},r(s||!n||!n.__esModule?o(l,\"default\",{value:n,enumerable:!0}):l,n)),v=n=>r(o({},\"__esModule\",{value:!0}),n);var t=N((x,i)=>{i.exports=_jsx_runtime});var y={};k(y,{default:()=>b,frontmatter:()=>f});var e=g(t()),f={title:\"C\\xF3mo convertir un valor a un valor booleano en JavaScript\",date:\"2022-06-22\",lastmod:\"2022-06-22\",tags:[\"javascript\",\"boolean\"],draft:!1,summary:\"Veamos c\\xF3mo JavaScript utiliza la conversi\\xF3n de tipos para convertir valores en booleanos true/false.\",images:[\"/static/images/blog/valores-a-boolean.jpg\"],authors:[\"fabiankaraben\"]};function j(n={}){let{wrapper:s}=n.components||{};return s?(0,e.jsx)(s,Object.assign({},n,{children:(0,e.jsx)(l,{})})):l();function l(){let a=Object.assign({p:\"p\",img:\"img\",h2:\"h2\",a:\"a\",span:\"span\",pre:\"pre\",code:\"code\",h3:\"h3\"},n.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(a.p,{children:(0,e.jsx)(a.img,{alt:\"tailwind-nextjs-banner\",src:\"/../static/images/blog/valores-a-boolean.jpg\"})}),(0,e.jsx)(a.p,{children:\"Un booleano es un valor primitivo que representa verdadero o falso (true/false).\"}),(0,e.jsx)(a.p,{children:\"En contextos booleanos, JavaScript utiliza la conversi\\xF3n de tipos para convertir valores en true/false.\"}),(0,e.jsx)(a.p,{children:\"Existen m\\xE9todos impl\\xEDcitos y expl\\xEDcitos para convertir valores en sus equivalentes booleanos. Este art\\xEDculo proporciona una descripci\\xF3n general de los valores verdaderos y falsos y c\\xF3mo convertir valores en valores booleanos en JavaScript.\"}),(0,e.jsxs)(a.h2,{id:\"hoja-de-trucos-de-valores-true-y-false-de-javascript\",children:[(0,e.jsx)(a.a,{\"aria-hidden\":\"true\",href:\"#hoja-de-trucos-de-valores-true-y-false-de-javascript\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"Hoja de trucos de valores true y false de JavaScript\"]}),(0,e.jsx)(a.pre,{children:(0,e.jsxs)(a.code,{className:\"code-highlight\",children:[(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean(false);         // false\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean(undefined);     // false\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean(null);          // false\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean('');            // false\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean(NaN);           // false\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean(0);             // false\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean(-0);            // false\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean(0n);            // false\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean(true);          // true\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean('hi');          // true\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean(1);             // true\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean([]);            // true\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean([0]);           // true\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean([1]);           // true\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean({});            // true\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Boolean({ a: 1 });      // true\n`})]})}),(0,e.jsx)(a.p,{children:\"Lo mejor es comenzar por comprender primero qu\\xE9 valores se interpretan como verdaderos o falsos por JavaScript.\"}),(0,e.jsx)(a.p,{children:\"Tambi\\xE9n es importante entender la coerci\\xF3n impl\\xEDcita en comparaci\\xF3n con la coerci\\xF3n expl\\xEDcita.\"}),(0,e.jsx)(a.p,{children:\"La coerci\\xF3n impl\\xEDcita es iniciada por el motor de JavaScript y ocurre autom\\xE1ticamente.\"}),(0,e.jsx)(a.p,{children:\"La coerci\\xF3n expl\\xEDcita se realiza mediante la conversi\\xF3n manual de valores, y JavaScript proporciona m\\xE9todos integrados para manejar esto.\"}),(0,e.jsxs)(a.h2,{id:\"el-operador-\",children:[(0,e.jsx)(a.a,{\"aria-hidden\":\"true\",href:\"#el-operador-\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"El operador !!\"]}),(0,e.jsx)(a.pre,{className:\"language-javascript\",children:(0,e.jsx)(a.code,{className:\"language-javascript code-highlight\",children:(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),`value\n`]})})}),(0,e.jsxs)(a.p,{children:[\"\\xA1Es posible que ya est\\xE9s familiarizado con \",(0,e.jsx)(a.code,{children:\"!\"}),\" como el operador l\\xF3gico NOT. Cuando se usan dos en sucesi\\xF3n (\",(0,e.jsx)(a.code,{children:\"!!\"}),\"), el primero \",(0,e.jsx)(a.code,{children:\"!\"}),\" fuerza el valor a un valor booleano y lo invierte. Por ejemplo, \",(0,e.jsx)(a.code,{children:\"!true\"}),\" dar\\xEDa como resultado \",(0,e.jsx)(a.code,{children:\"false\"}),\". El segundo \",(0,e.jsx)(a.code,{children:\"!\"}),\" invierte el valor invertido anterior, dando como resultado el valor booleano \",(0,e.jsx)(a.code,{children:\"true\"}),\".\"]}),(0,e.jsx)(a.p,{children:\"Este es generalmente un m\\xE9todo preferido, ya que tiene un mejor rendimiento. Una desventaja potencial de este m\\xE9todo es la p\\xE9rdida de legibilidad, principalmente si otros desarrolladores no est\\xE1n familiarizados con el funcionamiento de este operador.\"}),(0,e.jsx)(a.pre,{className:\"language-javascript\",children:(0,e.jsxs)(a.code,{className:\"language-javascript code-highlight\",children:[(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token keyword\",children:\"const\"}),\" value \",(0,e.jsx)(a.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"truthy string\"'}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),\"value \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// true\"}),`\n`]})]})}),(0,e.jsx)(a.p,{children:\"Aqu\\xED hay un ejemplo desglosando esto en pasos:\"}),(0,e.jsx)(a.pre,{className:\"language-javascript\",children:(0,e.jsxs)(a.code,{className:\"language-javascript code-highlight\",children:[(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token keyword\",children:\"const\"}),\" value \",(0,e.jsx)(a.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"truthy string\"'}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsx)(a.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),\"value\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// false\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),\"value\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// true\"}),`\n`]})]})}),(0,e.jsxs)(a.p,{children:[\"A continuaci\\xF3n se muestra una lista de salida de ejemplo con el \",(0,e.jsx)(a.code,{children:\"!!\"}),\" operador.\"]}),(0,e.jsx)(a.pre,{className:\"language-javascript\",children:(0,e.jsxs)(a.code,{className:\"language-javascript code-highlight\",children:[(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token comment\",children:\"// Falsy Values\"}),`\n`]}),(0,e.jsx)(a.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token string\",children:\"''\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// false\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token boolean\",children:\"false\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// false\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token keyword nil null\",children:\"null\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// false\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token keyword nil\",children:\"undefined\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// false\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token number\",children:\"0\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// false\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token number\",children:\"NaN\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// false\"}),`\n`]}),(0,e.jsx)(a.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token comment\",children:\"// Truthy Values\"}),`\n`]}),(0,e.jsx)(a.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// true\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token string\",children:'\"false\"'}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// true\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token boolean\",children:\"true\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// true\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token number\",children:\"1\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// true\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// true\"}),`\n`]})]})}),(0,e.jsxs)(a.h2,{id:\"la-funci\\xF3n-boolean\",children:[(0,e.jsx)(a.a,{\"aria-hidden\":\"true\",href:\"#la-funci\\xF3n-boolean\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"La funci\\xF3n Boolean()\"]}),(0,e.jsx)(a.pre,{className:\"language-javascript\",children:(0,e.jsx)(a.code,{className:\"language-javascript code-highlight\",children:(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token class-name known-class-name\",children:\"Boolean\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),\"value\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),`\n`]})})}),(0,e.jsxs)(a.p,{children:[(0,e.jsx)(a.code,{children:\"Boolean()\"}),\" es una funci\\xF3n global que convierte el valor que se pasa en un valor booleano.\"]}),(0,e.jsxs)(a.p,{children:[\"No debes usar esto con la palabra clave \",(0,e.jsx)(a.code,{children:\"new\"}),\" (\",(0,e.jsx)(a.code,{children:\"new Booleano\"}),\") ya que esto crea una instancia de un booleano que tiene un tipo de objeto. A continuaci\\xF3n se muestra un ejemplo del uso correcto de esta funci\\xF3n.\"]}),(0,e.jsx)(a.pre,{className:\"language-javascript\",children:(0,e.jsxs)(a.code,{className:\"language-javascript code-highlight\",children:[(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token keyword\",children:\"const\"}),\" value \",(0,e.jsx)(a.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"truthy string\"'}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token class-name known-class-name\",children:\"Boolean\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),\"value\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// true\"}),`\n`]})]})}),(0,e.jsxs)(a.h2,{id:\"en-resumen\",children:[(0,e.jsx)(a.a,{\"aria-hidden\":\"true\",href:\"#en-resumen\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"En resumen\"]}),(0,e.jsx)(a.p,{children:\"Hay dos m\\xE9todos para convertir un valor a un booleano en JavaScript.\"}),(0,e.jsxs)(a.h3,{id:\"1-\",children:[(0,e.jsx)(a.a,{\"aria-hidden\":\"true\",href:\"#1-\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"1. \",(0,e.jsx)(a.code,{children:\"!!\"})]}),(0,e.jsx)(a.pre,{className:\"language-javascript\",children:(0,e.jsx)(a.code,{className:\"language-javascript code-highlight\",children:(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),`value\n`]})})}),(0,e.jsxs)(a.h3,{id:\"2-boolean\",children:[(0,e.jsx)(a.a,{\"aria-hidden\":\"true\",href:\"#2-boolean\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"2. \",(0,e.jsx)(a.code,{children:\"Boolean()\"})]}),(0,e.jsx)(a.pre,{className:\"language-javascript\",children:(0,e.jsx)(a.code,{className:\"language-javascript code-highlight\",children:(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token class-name known-class-name\",children:\"Boolean\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),\"value\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),`\n`]})})}),(0,e.jsx)(a.pre,{className:\"language-javascript\",children:(0,e.jsxs)(a.code,{className:\"language-javascript code-highlight\",children:[(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token keyword\",children:\"const\"}),\" finalThoughts \",(0,e.jsx)(a.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"I really enjoyed writing this article. Thanks for reading!\"'}),`\n`]}),(0,e.jsx)(a.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),(0,e.jsx)(a.span,{className:\"token operator\",children:\"!\"}),\"finalThoughts \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// true\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token class-name known-class-name\",children:\"Boolean\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),\"finalThoughts\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// true\"}),`\n`]})]})})]})}}var b=j;return v(y);})();\n;return Component;"},"_id":"blog/javascript/valores-a-boolean.mdx","_raw":{"sourceFilePath":"blog/javascript/valores-a-boolean.mdx","sourceFileName":"valores-a-boolean.mdx","sourceFileDir":"blog/javascript","contentType":"mdx","flattenedPath":"blog/javascript/valores-a-boolean"},"type":"Blog","readingTime":{"text":"3 min read","minutes":2.44,"time":146400,"words":488},"slug":"javascript/valores-a-boolean","toc":[{"value":"Hoja de trucos de valores true y false de JavaScript","url":"#hoja-de-trucos-de-valores-true-y-false-de-javascript","depth":2},{"value":"El operador !!","url":"#el-operador-","depth":2},{"value":"La función Boolean()","url":"#la-función-boolean","depth":2},{"value":"En resumen","url":"#en-resumen","depth":2},{"value":"1. !!","url":"#1-","depth":3},{"value":"2. Boolean()","url":"#2-boolean","depth":3}]},"authorDetails":[{"name":"Fabián Karaben","avatar":"/static/images/fab-avatar.png","occupation":"Traductor y creador de contenido","company":"Esdocu","email":"hola.esdocu@gmail.com","twitter":"https://twitter.com/fab_k_dev","linkedin":"https://www.linkedin.com/in/fabiankaraben/","github":"https://github.com/fabiankaraben","type":"Authors","readingTime":{"text":"1 min read","minutes":0.185,"time":11100,"words":37},"slug":"fabiankaraben","toc":[]}],"prev":{"title":"JavaScript String.Split() Ejemplo con RegEx","date":"2022-06-21T00:00:00.000Z","tags":["javascript","split","string","regex"],"lastmod":"2022-06-21T00:00:00.000Z","draft":false,"summary":"Veamos cómo utilizar la función split y RegEx para dividir cadenas de texto.","images":["/static/images/blog/string-split-con-regex.jpg"],"authors":["fabiankaraben"],"type":"Blog","readingTime":{"text":"2 min read","minutes":1.83,"time":109800,"words":366},"slug":"javascript/string-split-con-regex","toc":[{"value":"Cómo usar RegEx con .split en JavaScript","url":"#cómo-usar-regex-con-split-en-javascript","depth":2},{"value":"Para finalizar","url":"#para-finalizar","depth":2}]},"next":{"title":"Cómo aplicar estilos en React: 5 formas de escribir CSS en 2022","date":"2022-06-24T00:00:00.000Z","tags":["react","css","sass"],"lastmod":"2022-06-24T00:00:00.000Z","draft":false,"summary":"Veamos las 5 formas principales entre las que puedes elegir al escribir CSS en tu aplicación React.","images":["/static/images/blog/como-aplicar-estilos-css-en-react-2022.jpg"],"authors":["fabiankaraben"],"type":"Blog","readingTime":{"text":"14 min read","minutes":13.775,"time":826500,"words":2755},"slug":"react/como-aplicar-estilos-css-en-react-2022","toc":[{"value":"Estilos en línea","url":"#estilos-en-línea","depth":2},{"value":"CSS plano","url":"#css-plano","depth":2},{"value":"SASS / SCSS","url":"#sass--scss","depth":2},{"value":"Módulos CSS","url":"#módulos-css","depth":2},{"value":"CSS-in-JS","url":"#css-in-js","depth":2},{"value":"Conclusión","url":"#conclusión","depth":2}]}},"__N_SSG":true}